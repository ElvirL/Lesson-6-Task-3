/*
Задание 3. Реализация программы таймера
Что нужно сделать
Реализуйте работу точного таймера с визуальной отдачей.
В начале программы пользователь вводит количество минут и секунд, которые требуется засечь на таймере, и нажимает «Ввод».
После этого начинается обратный отсчёт времени, о чём незамедлительно и последовательно сообщается пользователю. 
Формат вывода такой же, как и при вводе интервала: минуты и секунды.
Как только отсчёт на таймере иссяк, программа сообщает об этом с помощью вывода в консоль специального сообщения. 
Сообщение вместо аудиосигнала может выглядеть так: DING! DING! DING!
Советы и рекомендации
Для ввода значения для засекания времени используйте std::get_time, но в качестве формата запросите только минуты и секунды. 
Целевое время для остановки таймера вычислите сами с помощью манипуляции над текущим std::time. Количество оставшегося времени 
выводите в цикле и вычислите его самостоятельно с помощью обращения с типом std::time_t как с секундами.
*/

#include <iostream>
#include <ctime>
#include <iomanip>

int main(){
    setlocale(LC_ALL, "Russian");
    std::time_t t = std::time(nullptr);
    std::tm local = *std::localtime(&t);

    std::cout << "Введите минуты и секунды (в формате 10:30):" << std::endl;
    std::cin >> std::get_time(&local, "%M:%S");

    int minutes = local.tm_min;
    int seconds = local.tm_sec;

    std::time_t start = std::time(nullptr);

    while (minutes>0 || seconds >0){
        std::time_t end = std::time(nullptr);
        if (end > start){
            seconds -=end - start;
            if (seconds <0){
                minutes -=1;
                seconds = 60;
            }
            std:: cout << minutes << ":" << seconds << std::endl;
            start = end;
        }
    }
    std::cout << "DING! DING! DING!" << std::endl;

}